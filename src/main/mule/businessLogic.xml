<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:netsuite="http://www.mulesoft.org/schema/mule/netsuite"
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/netsuite http://www.mulesoft.org/schema/mule/netsuite/current/mule-netsuite.xsd">
	<flow name="businesslogicFlow" doc:id="20625294-79d3-45a3-90bd-9b44970bc67b">
		<batch:job jobName="migrateOpportunitiesBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc">
			<batch:process-records>
				<batch:step name="getOpportunityFromNetsuiteStep" doc:id="232087de-e311-49c1-a890-439c65ea1af2">
					<netsuite:search key="CUSTOMER" pageSize="100"
						doc:name="Search customer" doc:id="7886a00a-6c5c-43f9-9fd2-87666cdb5654"
						config-ref="NetSuite_Config" target="netsuiteRecords">
						<netsuite:search-record ><![CDATA[#[%dw 2.0
output application/java
---
{
	basic: {
		companyName: {
			operator: "IS",
			searchValue: payload.Account.Name
		}
	}
} as Object {class: "org.mule.module.netsuite.extension.api.CustomerSearch"}]]]></netsuite:search-record>
					</netsuite:search>
					<ee:transform doc:name="Push Id to payload"
						doc:id="76520bd5-e3c8-4310-ab84-f0c013edb0d1">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ {InternalId: vars.netsuiteRecords[0].internalId}
]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="createCustomerIfDoesNotExistStep"
					doc:id="acaea295-d3c0-46b5-b869-e3e59b429110" acceptExpression='#[payload.InternalId == null]'>
					<ee:transform
						doc:name="Set currentRecord variable and prepare Customer record"
						doc:id="487d6556-1296-4959-94cd-5c2531cff988">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	companyName 	: payload.Account.Name,
	subsidiary 		: {
		internalId 	: p('netsuite.customer.subsidiary.internalId'),
		"type" 		: 'SUBSIDIARY'
	}
}]]></ee:set-payload>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="currentRecord"><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<netsuite:add-record recordType="CUSTOMER"
						doc:name="Add customer" doc:id="ea16807f-bd24-42cd-b23d-c5611222d4e3"
						config-ref="NetSuite_Config" target="newCustomer" />
					<ee:transform doc:name="Push Id to Payload"
						doc:id="d5cf831d-828a-4551-bfff-be09c221e9dd">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
vars.currentRecord ++ {InternalId: vars.newCustomer.internalId}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="upsertOpportunitiesInNetsuiteStep"
					doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<ee:transform doc:name="Transform SFDC Opportunity to Netsuite Opportunity"
						doc:id="85eaae99-f038-4b4e-baa6-02ad4333584f">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java

var status = if (payload.StageName == 'Closed Won') 13
   			else if (payload.StageName == 'Closed Lost') 14         	
   			else if (payload.StageName == 'Negotiation/Review') 11  	
   			else if (payload.StageName == 'Id. Decision Makers') 9 	
   			else if (payload.StageName == 'Proposal/Price Quote') 10
   			else p('netsuite.opportunity.status.internalId')
---
{
	externalId 			: payload.Id,
	title 				: payload.Name,
	probability 		: payload.Probability,
	expectedCloseDate 	: (payload.CloseDate ++ "T00:00") as LocalDateTime {class: "java.time.LocalDateTime"},
	entity 				: {
		internalId		: payload.InternalId,
		"type"			: 'CUSTOMER'
	},
	entityStatus		: {
		internalId		: status,
		"type"			: 'CUSTOMER_STATUS'
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<netsuite:upsert-record recordType="OPPORTUNITY"
						doc:name="Upsert Opportunity" doc:id="38776560-9137-4c00-84f2-47ad17d3b968"
						config-ref="NetSuite_Config" />
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<scatter-gather doc:name="Scatter-Gather"
					doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
					<route>
						<logger level="INFO" doc:name="Migration process has finished!"
							doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished!" />
					</route>
					<route>
						<ee:transform doc:name="Prepare migration result email"
							doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
 output text/plain
 ---
 "Migration Report: \n"
  
 ++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
 ++ "\n Total Records: "			++ payload.totalRecords!
 ++ "\n Successful Records: "		++ payload.successfulRecords!
 ++ "\n Failed Records: "			++ payload.failedRecords!
 ++ "\n Loaded Records: "			++ payload.loadedRecords!
 ++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
							doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
							subject="${mail.subject}">
							<email:to-addresses>
								<email:to-address value="${mail.to}" />
							</email:to-addresses>
						</email:send>
					</route>
				</scatter-gather>
			</batch:on-complete>
		</batch:job>
</flow>
	<sub-flow name="queryFlow" doc:id="0925f843-a617-4769-b224-1a45a6cd78d8" >
		<salesforce:query config-ref="Salesforce_Sfdc_A_config" doc:name="Query Opportunities from Salesforce instance A" doc:id="ebcf71a8-3192-4437-b2cb-b23f008afae5">
		<salesforce:salesforce-query>SELECT Id, Name, Amount, StageName,
			Probability, CloseDate, Account.Id, Account.Name FROM Opportunity
			WHERE Account.Id &lt;&gt; null</salesforce:salesforce-query>
	</salesforce:query>
	</sub-flow>
	<flow name="mainFlow" doc:id="c9d80d54-ed92-4dc2-872f-629f3c0b678f">
		<flow-ref doc:name="queryFlow" doc:id="d2d6253c-b74f-43aa-9c25-1521de4e3083" name="queryFlow"/>
		
		
		<flow-ref doc:name="businesslogicFlow" doc:id="7e1b3d52-2256-4af8-b0c5-b8fbee3d1b66"
			name="businesslogicFlow" />
		<error-handler>
			<on-error-propagate enableNotifications="true"
				logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71"
				type="ANY">
				<flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3"
					name="errorHandlingFlow" />
			</on-error-propagate>
		</error-handler>
</flow>

</mule>
